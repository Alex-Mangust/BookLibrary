(()=>{"use strict";const t={name:"bookcart",props:["readbook"],template:'\n        <div class="book_cart">\n            <h3>{{readbook.title}}</h3>\n            <img :src="readbook.images" :alt="readbook.alt">\n            <div class="book_cart_buttons">\n                <button>Подробнее</button>\n                <button @click="deleteBook">Удалить</button>\n            </div>\n        </div>\n    ',methods:{deleteBook(){this.$parent.deleteBook(this.readbook.title)}},mounted(){document.querySelectorAll(".book_cart").forEach((t=>{t.addEventListener("mouseover",(()=>{const o=t.querySelectorAll(".book_cart_buttons");0!==o.length&&(o[0].style.visibility="visible")})),t.addEventListener("mouseout",(()=>{const o=t.querySelectorAll(".book_cart_buttons");0!==o.length&&(o[0].style.visibility="hidden")}))}))}};new Vue({el:"#app",components:{mybooks:{name:"mybooks",data:()=>({readingList:[],wantToReadList:[],finishReadList:[],index:0}),components:{readingblock:{name:"readingblock",components:{bookcart:t},props:["booklist"],data:()=>({componentStyle:{}}),template:'\n        <div style="componentStyle" class="reading">\n            <h2>Читаю в данный момент</h2>\n            <div class="books">\n                <div v-if="booklist.length === 0" class="book_cart">\n                    <h3>В данный момент здесь пусто</h3>\n                </div>\n                <bookcart v-for="(book, index) in booklist" :key="index" :readbook="book"></bookcart>\n            </div>\n        </div>\n    ',methods:{deleteBook(t){const o=this.booklist.filter((o=>o.title!==t));this.$parent.updateBooksList(o,1)}}},wanttoread:{name:"wanttoread",components:{bookcart:t},props:["booklist"],data:()=>({componentStyle:{}}),template:'\n        <div style="componentStyle" class="want_to_read">\n            <h2>Хочу прочитать</h2>\n            <div class="books">\n                <div v-if="booklist.length === 0" class="book_cart">\n                    <h3>В данный момент здесь пусто</h3>\n                </div>\n                <bookcart v-for="(book, index) in booklist" :key="index" :readbook="book"></bookcart>\n            </div>\n        </div>\n    ',methods:{deleteBook(t){const o=this.booklist.filter((o=>o.title!==t));this.$parent.updateBooksList(o,2)}}},finishread:{name:"finishread",components:{bookcart:t},props:["booklist"],data:()=>({componentStyle:{}}),template:'\n        <div style="componentStyle" class="finish_read">\n            <h2>Закончил читать</h2>\n            <div class="books">\n                <div v-if="booklist.length === 0" class="book_cart">\n                    <h3>В данный момент здесь пусто</h3>\n                </div>\n                <bookcart v-for="(book, index) in booklist" :key="index" :readbook="book"></bookcart>\n            </div>\n        </div>\n    ',methods:{deleteBook(t){const o=this.booklist.filter((o=>o.title!==t));this.$parent.updateBooksList(o,3)}}}},template:'\n        <div class="main">\n            <div class="my_books">\n                <readingblock :booklist="readingList"></readingblock>\n                <wanttoread :booklist="wantToReadList"></wanttoread>\n                <finishread :booklist="finishReadList"></finishread>\n            </div>\n            <div class="arrows">\n                <i @click="backBookCart" class="fa-solid fa-arrow-left"></i>\n                <i @click="nexBookCart" class="fa-solid fa-arrow-right"></i>\n            </div>\n        </div>\n    ',methods:{getElements(){return this.$children},aloneComponent(t,o=0){this.$nextTick((()=>{o>=t.length?o=0:o<0&&(o=t.length-1);for(let e=0;e<t.length;e++)t[e].$el.style.display=o===e?"flex":"none";this.index=o}))},nexBookCart(){this.aloneComponent(this.getElements(),++this.index)},backBookCart(){this.aloneComponent(this.getElements(),--this.index)},updateBooksList(t,o){switch(o){case 1:this.readingList=t;break;case 2:this.wantToReadList=t;break;case 3:this.finishReadList=t}this.$root.updateBooksList(t,o)}},mounted(){this.readingList=this.$root.getReadingList(),this.wantToReadList=this.$root.getWantToReadList(),this.finishReadList=this.$root.getFinishReadList(),this.aloneComponent(this.getElements(),this.index)}},addbook:{name:"addbook",template:'\n        <div class="add_book" @click="addBook">\n            <img src="../img/addBookImage.png" alt="Иконка \'Добавить новую книгу\'">\n            <p>Добавить новую книгу</p>\n        </div>\n    ',methods:{addBook(){console.log("New book")}}}},data:{title:"Личная библиотека",readingList:[{images:"./img/booksImages/идеальныйМирДляЛекаря.jpg",title:"Идеальный мир для лекаря",alt:"Иконка книги 'Идеальный мир для лекаря'"},{images:"./img/booksImages/впнт.jpg",title:"Вы призвали не того",alt:"Иконка книги 'Вы призвали не того'"}],wantToReadList:[{images:"./img/booksImages/сыныАида.jpg",title:"Сыны Аида",alt:"Иконка книги 'Сыны Аида'"},{images:"./img/booksImages/МирНеОправдавшийМоихОжиданий.jpg",title:"Мир, не оправдавший моих ожиданий",alt:"Иконка книги 'Мир, не оправдавший моих ожиданий'"}],finishReadList:[{images:"./img/booksImages/этоМыНеПроходили.jpg",title:"Это мы не проходили...",alt:"Иконка книги 'Это мы не проходили...'"},{images:"./img/booksImages/брд.jpg",title:"Бастард рода демонов",alt:"Иконка книги 'Бастард рода демонов'"}]},methods:{updateBooksList(t,o){switch(o){case 1:this.readingList=t;break;case 2:this.wantToReadList=t;break;case 3:this.finishReadList=t}},getReadingList(){return this.readingList},getWantToReadList(){return this.wantToReadList},getFinishReadList(){return this.finishReadList}},mounted(){}})})();